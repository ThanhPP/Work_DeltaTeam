package woo

import (
	"encoding/json"
	"fmt"
	"log"
	"strconv"

	"github.com/gocolly/colly"
)

func getPageTotal(link string) (totalPage int) {
	var count int
	c := colly.NewCollector()
	for i := 1; ; i += 5 {
		err := c.Visit(link + `/wp-json/wp/v2/product/?page=` + strconv.Itoa(i) + `&per_page=100`)
		count++
		if err != nil {
			for j := i; ; j-- {
				err := c.Visit(link + `/wp-json/wp/v2/product/?page=` + strconv.Itoa(j) + `&per_page=100`)
				count++
				if err == nil {
					fmt.Println(count)
					return j + 1
				}
			}
		}
	}
}

//Crawl Crawl fromm a woo site
func Crawl(link string) (productIDList []int) {
	c := colly.NewCollector()
	c.Limit(&colly.LimitRule{Parallelism: 4})

	c.OnRequest(func(rq *colly.Request) {
		log.Println("Visting a woo site : ", rq.URL)
	})

	c.OnResponse(func(rsp *colly.Response) {
		var a AutoGenerated
		err := json.Unmarshal(rsp.Body, &a)
		if err != nil {
			log.Fatal(err)
		}

		for i := 0; i < len(a); i++ {
			productIDList = append(productIDList, a[i].ID)
		}
	})

	totalPage := getPageTotal(link)
	for i := 1; i < totalPage; i++ {
		err := c.Visit(link + `/wp-json/wp/v2/product/?page=` + strconv.Itoa(i) + `&per_page=100`)
		if err != nil {
			log.Println(err)
			break
		}
	}

	return productIDList
}
