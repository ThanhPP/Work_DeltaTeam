package shopbase

import (
	"encoding/json"
	"fmt"
	"log"
	"strconv"

	"github.com/gocolly/colly"
)

func shopBaseGetTotal(link string) (total int) {
	c1 := colly.NewCollector()

	c1.OnRequest(func(rq *colly.Request) {
		fmt.Println("Shopbase get total : ", rq.URL)
	})

	c1.OnResponse(func(rsp *colly.Response) {
		var a AutoGenerated
		err := json.Unmarshal(rsp.Body, &a)
		if err != nil {
			log.Fatalln(err)
		}
		total = a.Total
	})

	c1.Visit(link)
	return total
}

//Crawl get product from shopbase
func Crawl(link string) (productList []Products) {
	// total := shopBaseGetTotal("https://www.ellezz.com/api/catalog/products_v2.json?sort_field=id&sort_direction=desc&&limit=9999")
	total := 164
	c := colly.NewCollector()

	c.OnRequest(func(rq *colly.Request) {
		log.Println("Visiting a shopbase site ", rq.URL)
	})

	c.OnResponse(func(rsp *colly.Response) {
		// fmt.Println("response code : ", rsp.StatusCode)
		// fmt.Println("response header : ", rsp.Headers)
		// fmt.Println()

		var a AutoGenerated
		err := json.Unmarshal(rsp.Body, &a)
		if err != nil {
			log.Fatalln(err)
		}
		for _, product := range a.Products {
			// log.Println(i, ". ", product.ID)
			productList = append(productList, product)
		}
	})

	for i := 1; i <= ((total / 50) + 1); i++ {
		visitLink := string(link + `/api/catalog/products_v2.json?sort_field=id&sort_direction=desc&page=` + strconv.Itoa(i) + `&limit=50`)
		// fmt.Println(visitLink)
		err := c.Visit(visitLink)
		if err != nil {
			log.Fatal(err)
		}
	}

	return productList
}
